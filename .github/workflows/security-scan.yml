name: Automated Security Scan and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  workflow_dispatch:  # Manual trigger option

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/${{ github.repository }}-security-demo
  FAIL_ON_VULNERABILITIES: true  # Set to false to allow builds to pass even with vulnerabilities

jobs:
  build-scan-push:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Docker Buildx
      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the base Docker image
      - name: Build Base Docker Image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:base-${{ github.sha }} .

      # Install Trivy
      - name: Install Trivy
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.50.1/trivy_0.50.1_Linux-64bit.tar.gz
          tar zxvf trivy_0.50.1_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/
          trivy --version

      # Scan the image for vulnerabilities
      - name: Scan Docker Image with Trivy
        id: trivy-scan
        run: |
          EXIT_CODE=0
          if [ "${{ env.FAIL_ON_VULNERABILITIES }}" = "true" ]; then
            EXIT_CODE=1
          fi
          trivy image --severity HIGH,CRITICAL --exit-code $EXIT_CODE \
          ${{ env.IMAGE_NAME }}:base-${{ github.sha }} | tee trivy-scan.log

      # Generate Trivy report
      - name: Generate Trivy Report
        if: always()
        run: |
          trivy image --format json -o trivy-report.json \
          ${{ env.IMAGE_NAME }}:base-${{ github.sha }}

      # Build final image with the report
      - name: Build Final Docker Image with Trivy Report
        if: always()
        run: |
          docker create --name temp-container ${{ env.IMAGE_NAME }}:base-${{ github.sha }}
          docker cp trivy-report.json temp-container:/app/trivy-report.json
          docker commit temp-container ${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.IMAGE_NAME }}:latest
          docker rm temp-container

      # Upload Trivy artifacts
      - name: Upload Trivy Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-artifacts
          path: |
            trivy-report.json
            trivy-scan.log

      # Push to Docker Hub
      - name: Push Docker Image to Docker Hub
        if: success()
        run: |
          docker push ${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.IMAGE_NAME }}:latest